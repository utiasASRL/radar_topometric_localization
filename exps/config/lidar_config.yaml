/**:
  ros__parameters:
    ############ system configuration ############
    # Data logging
    log_to_file: true
    log_debug: false
    log_enabled: [
        ## ADD LOGGER IDS HERE
        # tactic
        # "tactic",
        # "tactic.pipeline",
        # "tactic.module",
        # "tactic.module.live_mem_manager",
        # "tactic.module.graph_mem_manager",
        # pipeline specific
        "lidar.pipeline",
        # "lidar.velodyne_converter",
        # "lidar.preprocessing",
        # "lidar.odometry_icp",
        # "lidar.odometry_map_maintenance",
        # "lidar.vertex_test",
        # "lidar.localization_map_recall",
        # "lidar.localization_icp",
      ]

    ############ tactic configuration ############
    tactic:
      enable_parallelization: false
      preprocessing_skippable: false
      odometry_mapping_skippable: false
      localization_skippable: false

      task_queue_num_threads: 1
      task_queue_size: -1

      chain:
        min_cusp_distance: 1.5
        angle_weight: 7.0
        search_depth: 5
        search_back_depth: 10
        distance_warning: 30.0

      save_odometry_result: true
      save_localization_result: true
      visualize: true

      rviz_loc_path_offset: [0., 0., 0.]

    ############ pipeline configuration ############
    pipeline:
      type: lidar

      preprocessing: [
          # preprocessing thread modules
          "conversion",
          "filtering",
        ]

      odometry: [
          # odometry and mapping thread modules
          "icp",
          "mapping",
          "vertex_test",
          "memory",
        ]

      localization: [
          # localization thread modules
          "recall",
          "icp",
          "memory",
        ]

      # submap creation thresholds
      submap_translation_threshold: 10.0 # in meters
      submap_rotation_threshold: 30.0 # in degrees

    preprocessing:
      conversion:
        type: lidar.velodyne_converter

        visualize: true

      filtering:
        type: lidar.preprocessing

        num_threads: 8

        crop_range: 60.0

        frame_voxel_size: 0.3 # grid subsampling voxel size

        vertical_angle_res: 0.0017453292519943296 # vertical angle resolution in radius (0.1 in degree)
        polar_r_scale: 2.0 # polar_r_scale x vertical_angle_res = nearest neighbor search radius for normal computation
        r_scale: 4.0 # scale down point range by this value after taking log, whatever works
        h_scale: 2.0 # scale down yaw(phi) by this value so that vertical resolution ~= horizontal resolution

        num_sample1: 10000 # max number of sample after filtering based on planarity
        min_norm_score1: 0.95 # min planarity score

        num_sample2: 20000 # max number of sample after filtering based on planarity
        min_norm_score2: 0.0 # 0.2 is when the incident angle 5/12 * pi
        min_normal_estimate_dist: 2.0 # minimum distance to estimate normal in meters
        max_normal_estimate_angle: 0.42 # must <1/2, this value will be timed by M_PI

        cluster_num_sample: 20000 # maxnumber of sample after removing isolated points

        visualize: true

    odometry:
      icp:
        type: lidar.odometry_icp

        # continuous time estimation
        use_trajectory_estimation: true
        traj_num_extra_states: 0
        traj_lock_prev_pose: false
        traj_lock_prev_vel: false
        traj_qc_diag: [50.0, 50.0, 50.0, 5.0, 5.0, 5.0]

        # ICP parameters
        num_threads: 8
        first_num_steps: 3
        initial_max_iter: 6
        initial_max_pairing_dist: 3.0
        initial_max_planar_dist: 1.0
        refined_max_iter: 100
        refined_max_pairing_dist: 1.0
        refined_max_planar_dist: 0.3
        averaging_num_steps: 3
        # steam parameters
        verbose: false
        max_iterations: 1

        # threshold
        min_matched_ratio: 0.0

        visualize: true

      mapping:
        type: lidar.odometry_map_maintenance_v2

        map_voxel_size: 0.3

        crop_range_front: 60.0
        back_over_front_ratio: 1.0

        point_life_time: 10.0

        visualize: true

      vertex_test:
        type: lidar.vertex_test

        max_translation: 1.0
        max_rotation: 10.0

      memory:
        type: "live_mem_manager"

        window_size: 5 # unload data older than this many keyframes

    localization:
      recall:
        type: lidar.localization_map_recall

        map_version: "pointmap"

        visualize: true

      icp:
        type: lidar.localization_icp

        use_pose_prior: true

        # ICP parameters
        num_threads: 1
        first_num_steps: 3
        initial_max_iter: 6
        initial_max_pairing_dist: 5.0
        initial_max_planar_dist: 1.0
        refined_max_iter: 100
        refined_max_pairing_dist: 1.0
        refined_max_planar_dist: 0.3
        averaging_num_steps: 3

        # steam parameters
        verbose: false
        max_iterations: 1

        # threshold
        min_matched_ratio: 0.3

      memory:
        type: "graph_mem_manager"

        vertex_life_span: 5
        window_size: 3
